<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yourssu 기술 블로그</title>
    <link>https://blog.yourssu.com/</link>
    <description>Recent content on Yourssu 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sun, 24 Jan 2021 15:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.yourssu.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git 으로 협업을 시작하자 - 초중급자용</title>
      <link>https://blog.yourssu.com/post/git-%EC%9C%BC%EB%A1%9C-%ED%98%91%EC%97%85%EC%9D%84-%EC%8B%9C%EC%9E%91%ED%95%98%EC%9E%90-%EC%B4%88%EC%A4%91%EA%B8%89%EC%9E%90%EC%9A%A9/</link>
      <pubDate>Sun, 24 Jan 2021 15:30:00 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/git-%EC%9C%BC%EB%A1%9C-%ED%98%91%EC%97%85%EC%9D%84-%EC%8B%9C%EC%9E%91%ED%95%98%EC%9E%90-%EC%B4%88%EC%A4%91%EA%B8%89%EC%9E%90%EC%9A%A9/</guid>
      <description>서론 안녕하세요 오랜만에 돌아온 유어슈의 안드로이드 개발자 박정현입니다.  오늘은 깃에 대해서 이야기 해볼까 합니다.
이런 말을 하면 &amp;lsquo;갑자기 왠 git?? 그건 당연히 개발하려면 알아야 하는거 아닙니까?&amp;rsquo; 라는 분도 계실거 같아요. 이 글을 쓰기 시작한 이유부터 말씀드려야 할거 같군요.
유어슈는 대학교 동아리에서 운영되는 단체입니다. 일부 몇명을 제외하고는 당연히 사람이 빨리 빠지고 다시 들어오는 구조입니다 즉 교체가 자주 됩니다. 즉 빠르게 배우고 빠르게 협업해야 합니다! 근데 대학생이잖아요&amp;hellip;. 솔직히 깃 시스템에 대해서 얼마나 알고 들어올까요?</description>
    </item>
    
    <item>
      <title>에브리타임 봇 제작기 - (1: 에타 크롤러)</title>
      <link>https://blog.yourssu.com/post/everytime-bot-1/</link>
      <pubDate>Mon, 09 Mar 2020 01:07:00 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/everytime-bot-1/</guid>
      <description>에브리타임 봇 제작기 - (1: 에타 크롤러) 안녕하세요. 유어슈 0G 입니다.
동아리 내에서는 대장 겸, 만능노예를 맡고있습니다.

노예의 주 업무는 에브리타임에서 동아리 관련한 글에 답변을 다는 것입니다.
그러나 하나하나 매일 찾고 대응하는 것 이 보통 일이 아니더라고요.
그래서 생각했습니다.
봇을 만들자!  
기획/마케팅 출신인 제가 이 짓을 시작하게 된 계기는 심플합니다. 개발팀한테 만들어달라 했는데 아무도 관심을 안줬기 때문입니다. ( 황금같은 일요일을 쉽게 낭비하는 법 )
 
봇의 기본적인 구조는 19년도 2월에 작성된 네이버 블로그글을 참고했습니다.</description>
    </item>
    
    <item>
      <title>Rxjava에 관한 고찰</title>
      <link>https://blog.yourssu.com/post/rxjava%EC%97%90-%EA%B4%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/</link>
      <pubDate>Tue, 18 Feb 2020 23:30:30 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/rxjava%EC%97%90-%EA%B4%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/</guid>
      <description>안녕하세요 유어슈에서 안드로이드 개발을 맡고 있는 박정현입니다
오늘은 요즘 많이 사용되고 있는 반응형 프로그래밍에 대해 알아볼까 합니다
반응형 프로그래밍이란 기존의 명령형 방식이 아닌 데이터의 흐름에 따라 동작하게 되는 프로그래밍 기법입니다
안드로이드에서 이를 위해서 가장 많이 사용하는 것이 Rxjava(reactive java) 즉 반응형 프로그래밍을 위한 라이브러리의 일종입니다
때문에 Rxjava에 대해서, 그 중에서도 Observable 객체와 관련된 객체들 그리고 몇가지 연산자에 대한 글을 작성해 보려고 합니다
 Rxjava에서 반응형 프로그래밍을 하기 위해선 기본적으로 Observable 객체를 생성하고 이를 구독하게 되면 그 순간부터 데이터가 배출되기 시작해 미리 지정해둔 코드를 실행하게 됩니다 (Hot Observable과 cold Observable 에 대해서는 이 포스트에서 다루지 않습니다)</description>
    </item>
    
    <item>
      <title>keychain 사용해보기</title>
      <link>https://blog.yourssu.com/post/keychain/</link>
      <pubDate>Sat, 07 Dec 2019 15:00:00 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/keychain/</guid>
      <description>이번 포스트에서는 비밀번호, 주민번호 등 민감 정보를 안전하게 처리할 수 있는 Keychain에 대해서 살펴보도록 하겠습니다. 우리는 기존에 데이터를 기기에 저장해두기 위해 UserDefaults를 사용하였었는데 이는 단순 데이터를 저장하기에는 문제가 없으나 비밀번호, 인증서, 개인 정보 등 민감한 정보를 저장하기에는 base-64로 인코딩해서 저장하는 것으로 충분하지 않는가? 라고 생각할 수 있겠지만 이는 보안 상 결코 안전하지 않습니다.
1. KeyChain 이란? 컴퓨터 사용자는 종종 안전하게 보관해야하는 작은 비밀을 가지고 있습니다. 예를 들어, 대부분의 사람들은 수많은 온라인 계정을 관리합니다.</description>
    </item>
    
    <item>
      <title>실제코드로 알아보는 dagger</title>
      <link>https://blog.yourssu.com/post/%EC%8B%A4%EC%A0%9C%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-dagger/</link>
      <pubDate>Sat, 07 Dec 2019 04:03:04 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/%EC%8B%A4%EC%A0%9C%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-dagger/</guid>
      <description>실제코드로 알아보는 dagger 유어슈에서 안드로이드 개발을 하고 있는 박정현입니다 오늘은 Android에서 DI(dependence injection) 문제를 해결하기 위해 가장 많이 쓰이고 있는 dagger2에 대해 보다 쉽게 알아보겠습니다
처음 안드로이드 개발을 시작하는 분들은 dagger의 필요성을 인식하지 못하는 것 같습니다 사실 저도 그런 사람들 중에 한명이었습니다 하지만 항상 극한의 상황을 생각해야 하는 프로그래머의 현실;;
사실 어느정도 규모의 어플을 개발하다 보면 의존성 문제라는 것에 직면하게 되는 시기가 찾아오는 것 같습니다
하지만 dagger 혼자 시작하기도 힘들고 개념이나 사용법을 공부한다 하더라고 막상 어떻게 적용해야 할지 막막한 것이 현실입니다 저도 이해하는데 너무나 오래 걸렸고 사실 지금도 제대로 이해했는지 확신이 들지 않을 정도로 러닝커브가 긴 기술인것 같습니다</description>
    </item>
    
    <item>
      <title>IOS TDD 시작하기1</title>
      <link>https://blog.yourssu.com/post/ios-tdd-start1/</link>
      <pubDate>Sun, 17 Nov 2019 01:10:26 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/ios-tdd-start1/</guid>
      <description>iOS Test Driven Development 시작하기 1 안녕하세요. 유어슈에서 iOS 개발을 리드하고 있는 앤드류입니다 :) 저는 앞으로 유어슈 기술블로그에서 iOS TDD를 연재할 계획입니다. 글솜씨가 좋지 못해서 여러분에게 제대로 정보를 전달할 수 있을지 걱정도 되는데 잘못된 내용이나, 고치면 좋은 부분은 댓글로 남겨주시면 감사하겠습니다.
Unit Tests시작하기 iOS에서 테스트를 시작할 때 기본적으로 Unit Tests, UI Tests 이 두가지를 할 수 있습니다. Unit Tests의 경우 우리가 직접 작성한 코드들을 테스트해볼 수 있는 기능이며 UI Tests는 실제 구동을 했을 때 디바이스에서 작동하는 테스트입니다.</description>
    </item>
    
    <item>
      <title>Serverless 아키텍쳐 간단 후기</title>
      <link>https://blog.yourssu.com/post/serverless-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B0%84%EB%8B%A8-%ED%9B%84%EA%B8%B0/</link>
      <pubDate>Fri, 15 Nov 2019 01:28:41 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/serverless-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B0%84%EB%8B%A8-%ED%9B%84%EA%B8%B0/</guid>
      <description>서버리스란 서버리스란 개발자가 서버 하드웨어를 관리할 필요 없이 코드에만 집중할 수 있는 아키텍쳐입니다. 서버리스를 사용하여 개발자는 기능을 함수 단위로 쪼개 마이크로서비스로 운영할 수 있습니다.
서버리스는 Backend As A Service(BAAS)와 Function As A Service(FAAS)를 총칭하는 용어입니다. BAAS의 대표적인 예로는 Google Firebase가 있으며, FAAS로는 Azure Functions, AWS Lambda 등이 있습니다.
왜 서버리스를 선택했는가 예전에는 간단한 프로젝트라도 AWS EC2와 같은 가상 머신에 서버를 배포했었습니다. 하지만 이러한 가상 머신은 사용 시간에 따라 가격이 책정됐기 때문에, 저같은 학생 입장에서 부담스러웠습니다.</description>
    </item>
    
    <item>
      <title>Reactive Programming 간단하게 알아보자!</title>
      <link>https://blog.yourssu.com/post/reactiveprogramming/</link>
      <pubDate>Mon, 11 Nov 2019 15:31:24 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/reactiveprogramming/</guid>
      <description>Reactive Programing&amp;nbsp;간단 정리!
&amp;nbsp;
안녕하세요,&amp;nbsp;유어슈 백엔드 개발자 Steve입니다.
이 글에서는 제가&amp;nbsp;Reactive Programing을 처음 접하게 되며 알게된 내용들을 간략하게 설명하고자합니다.&amp;nbsp;개인적인 이해가 담겨져있는 글이므로 정확하지 않은 부분에 대하여 언제든지 피드백 해주시면 감사하겠습니다:D
&amp;nbsp;
&amp;nbsp;




Reactive Programing이란?
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;</description>
    </item>
    
    <item>
      <title>Margarets</title>
      <link>https://blog.yourssu.com/developer/margarets/</link>
      <pubDate>Tue, 17 Sep 2019 20:35:04 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/developer/margarets/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>