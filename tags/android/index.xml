<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Yourssu 기술 블로그</title>
    <link>https://blog.yourssu.com/tags/android/</link>
    <description>Recent content in Android on Yourssu 기술 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 18 Feb 2020 23:30:30 +0900</lastBuildDate>
    
	<atom:link href="https://blog.yourssu.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rxjava에 관한 고찰</title>
      <link>https://blog.yourssu.com/post/rxjava%EC%97%90-%EA%B4%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/</link>
      <pubDate>Tue, 18 Feb 2020 23:30:30 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/rxjava%EC%97%90-%EA%B4%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/</guid>
      <description>안녕하세요 유어슈에서 안드로이드 개발을 맡고 있는 박정현입니다
오늘은 요즘 많이 사용되고 있는 반응형 프로그래밍에 대해 알아볼까 합니다
반응형 프로그래밍이란 기존의 명령형 방식이 아닌 데이터의 흐름에 따라 동작하게 되는 프로그래밍 기법입니다
안드로이드에서 이를 위해서 가장 많이 사용하는 것이 Rxjava(reactive java) 즉 반응형 프로그래밍을 위한 라이브러리의 일종입니다
때문에 Rxjava에 대해서, 그 중에서도 Observable 객체와 관련된 객체들 그리고 몇가지 연산자에 대한 글을 작성해 보려고 합니다
 Rxjava에서 반응형 프로그래밍을 하기 위해선 기본적으로 Observable 객체를 생성하고 이를 구독하게 되면 그 순간부터 데이터가 배출되기 시작해 미리 지정해둔 코드를 실행하게 됩니다 (Hot Observable과 cold Observable 에 대해서는 이 포스트에서 다루지 않습니다)</description>
    </item>
    
    <item>
      <title>실제코드로 알아보는 dagger</title>
      <link>https://blog.yourssu.com/post/%EC%8B%A4%EC%A0%9C%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-dagger/</link>
      <pubDate>Sat, 07 Dec 2019 04:03:04 +0900</pubDate>
      
      <guid>https://blog.yourssu.com/post/%EC%8B%A4%EC%A0%9C%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-dagger/</guid>
      <description>실제코드로 알아보는 dagger 유어슈에서 안드로이드 개발을 하고 있는 박정현입니다 오늘은 Android에서 DI(dependence injection) 문제를 해결하기 위해 가장 많이 쓰이고 있는 dagger2에 대해 보다 쉽게 알아보겠습니다
처음 안드로이드 개발을 시작하는 분들은 dagger의 필요성을 인식하지 못하는 것 같습니다 사실 저도 그런 사람들 중에 한명이었습니다 하지만 항상 극한의 상황을 생각해야 하는 프로그래머의 현실;;
사실 어느정도 규모의 어플을 개발하다 보면 의존성 문제라는 것에 직면하게 되는 시기가 찾아오는 것 같습니다
하지만 dagger 혼자 시작하기도 힘들고 개념이나 사용법을 공부한다 하더라고 막상 어떻게 적용해야 할지 막막한 것이 현실입니다 저도 이해하는데 너무나 오래 걸렸고 사실 지금도 제대로 이해했는지 확신이 들지 않을 정도로 러닝커브가 긴 기술인것 같습니다</description>
    </item>
    
  </channel>
</rss>